#define TAK

#include "general/standard_commands.h"

piece  base, pelvis, thigh1, leg1, thigh2, leg2, thigh3, leg3, spine, torso, luparm, lloarm, fpt1, fpt2, ruparm, rloarm, fpt3, fpt4;

#define SMOKEPIECE1 pelvis
#define SMOKEPIECE2 torso
#define SMOKEPIECE3 pelvis
#define SMOKEPIECE4 torso
#include "general/smokeunit_sws.h"

#define SMALL_MUZZLE_FLASH_FX_RED 1024+1

static-var gun_1, packedUp, bMoving, bAiming, canFire, maxSpeed;


FoldUp() {
	if(!packedUp and !bAiming) {
		turn luparm to y-axis <45> speed <160>;
		turn lloarm to x-axis <-90> speed <160>;
		turn lloarm to y-axis <-90> speed <160>;
		turn ruparm to y-axis <-45> speed <160>;
		turn rloarm to x-axis <-90> speed <160>;
		turn rloarm to y-axis <90> speed <160>;
		turn spine to x-axis <-45> speed <120>;
		turn torso to x-axis <60> speed <130>;
		move spine to y-axis [-1.7] speed [40];
		move spine to z-axis [1.2] speed [40];
		wait-for-turn torso around x-axis;
		turn thigh1 to x-axis <-80> speed <160>;
		turn thigh1 to y-axis <0> speed <160>;
		turn leg1 to x-axis <80> speed <160>;
		turn thigh2 to x-axis <-80> speed <160>;
		turn thigh2 to y-axis <0> speed <160>;
		turn leg2 to x-axis <80> speed <160>;
		turn thigh3 to x-axis <-90> speed <160>;
		turn leg3 to x-axis <-20> speed <160>;
		move pelvis to y-axis [-2.5] speed [60];
		set MAX_SPEED to maxSpeed * 10;
		packedUp=1;
		canFire=0;
	}
}

Unfold() {
	if(packedUp) {
		set MAX_SPEED to maxSpeed / 3;
		turn pelvis to x-axis <0> speed <200>;
		wait-for-turn pelvis around x-axis;
		turn thigh1 to x-axis <0> speed <160>;
		turn leg1 to x-axis <0> speed <160>;
		turn thigh2 to x-axis <0> speed <160>;
		turn leg2 to x-axis <0> speed <160>;
		turn thigh3 to x-axis <0> speed <160>;
		turn leg3 to x-axis <0> speed <160>;
		move pelvis to y-axis [0] speed [60];
		wait-for-move pelvis along y-axis;
		turn luparm to y-axis <0> speed <160>;
		turn lloarm to x-axis <0> speed <160>;
		turn lloarm to y-axis <0> speed <160>;
		turn ruparm to y-axis <0> speed <160>;
		turn rloarm to x-axis <0> speed <160>;
		turn rloarm to y-axis <0> speed <160>;
		turn spine to x-axis <-20> speed <120>;
		turn torso to x-axis <20> speed <130>;
		move spine to y-axis [0] speed [40];
		move spine to z-axis [0] speed [40];
		wait-for-turn lloarm around x-axis;
		canFire=1;
		packedUp=0;
	}
}

Walk() {
	if(!packedUp) {
		turn thigh1 to y-axis <20> speed <160>;
		turn thigh1 to x-axis <-5> speed <160>;
		turn leg1 to x-axis <-30> speed <200>;
		turn thigh2 to y-axis <-80> speed <160>;
		turn thigh2 to x-axis <0> speed <180>;
		turn leg2 to x-axis <0> speed <120>;
		turn thigh3 to x-axis <0> speed <160>;
		turn leg3 to x-axis <0> speed <160>;
		wait-for-turn thigh1 around y-axis;
	}
	if(!packedUp) {
		turn thigh1 to y-axis <80> speed <160>;
		turn thigh1 to x-axis <0> speed <180>;
		turn leg1 to x-axis <0> speed <120>;
		turn thigh2 to y-axis <-20> speed <160>;
		turn thigh2 to x-axis <-5> speed <160>;
		turn leg2 to x-axis <-30> speed <200>;
		turn thigh3 to x-axis <-20> speed <160>;
		turn leg3 to x-axis <-20> speed <160>;
		wait-for-turn thigh2 around y-axis;
	}
}

StartMoving() {
	bMoving=1;
	//bAiming=1;
	if(bAiming == 1) {
	sleep 5000; }
//	bAiming=0;
}

StopMoving() {
	bMoving=0;
}

MotionControl() {
	while(1) {
		if(bMoving and !bAiming) {
			if(!packedUp) {
				call-script FoldUp();
			}
			spin pelvis around x-axis speed <600> accelerate <80>;
		}
		if((bMoving and bAiming) or (!bMoving)) {
			if(bAiming) {
				if(packedUp) {
					stop-spin pelvis around x-axis;
					call-script Unfold();
				}
			}
			if(packedUp) {
				sleep 200;
				if(!bMoving) {
					stop-spin pelvis around x-axis;
					call-script Unfold();
				}
			}
			if(!packedUp and bMoving) {
				stop-spin pelvis around x-axis;
				call-script Walk();
			}
		}
		sleep 50;
	}
}

Create() {
	maxSpeed = get MAX_SPEED;
	//set MAX_SPEED to maxSpeed / 4;
	packedUp=0;
	gun_1=0;
	canFire=1;
	turn thigh1 to y-axis <60> now;
	turn thigh2 to y-axis <-60> now;
	turn spine to x-axis <-20> now;
	turn torso to x-axis <20> now;
	start-script MotionControl();
	start-script SmokeUnit_SWS();
}

RestoreAfterDelay() {
	sleep 5000;
	turn pelvis to y-axis <0> speed <120>;
	turn luparm to x-axis <0> speed <120>;
	turn ruparm to x-axis <0> speed <120>;
	bAiming=0;
}

AimWeapon3(heading,pitch) {
	bAiming=1;
	//start-script RestoreAfterDelay();
	return 0;
}

AimFromWeapon1(piecenum) {
	piecenum=torso;
}

AimWeapon1(heading, pitch) {
	signal SIG_AIM1;
	set-signal-mask SIG_AIM1;
	bAiming=1;
	if(!canFire) {
		return 0; }
	turn pelvis to y-axis heading speed <120>;
	turn luparm to x-axis 0 - pitch speed <120>;
	turn ruparm to x-axis 0 - pitch speed <120>;
	wait-for-turn pelvis around y-axis;
	start-script RestoreAfterDelay();
	return 1;
}

QueryWeapon1(piecenum) {
	if(gun_1 == 0) {
		piecenum = fpt1;
	}
	if(gun_1 == 1) {
		piecenum = fpt3;
	}
	if(gun_1 == 2) {
		piecenum = fpt2;
	}
	if(gun_1 == 3) {
		piecenum = fpt4;
	}
}

Shot1(springisgay) {
	++gun_1;
	if(gun_1 > 3) {
		gun_1 = 0;
	}
	if(gun_1 == 0) {
		emit-sfx SMALL_MUZZLE_FLASH_FX_RED from fpt1;
		emit-sfx SMALL_MUZZLE_FLASH_FX_RED from fpt2;
	}
	if(gun_1 == 2) {
		emit-sfx SMALL_MUZZLE_FLASH_FX_RED from fpt3;
		emit-sfx SMALL_MUZZLE_FLASH_FX_RED from fpt4;
	}
}

FireWeapon1() {
}

AimWeapon2() {
	if(packedUp) {
		return 0;
	}
	return 1;
}

Killed(severity, corpsetype)
{
	if(severity <= 25) {
		corpsetype = 1;
		return 0;
	}
	if(severity <= 50) {
		corpsetype = 2;
		return 0;
	}
	if(severity <= 99) {
		corpsetype = 3;
		return 0;
	}
	corpsetype = 3;
}


/* piece  ground, shield, torso, back1, mid, back2, plate, flap1,
       flap2, leg1, foot1, leg2, foot2, leg3, foot3, back3,
       head, arm1, loarm1, gun1, barrel1, arm2, loarm2,
       gun2, barrel2, pad1, pad2, flare1, flare2, rfirept, lfirept;


static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4, restore_delay,
            bMoving, gun_1, Static_Var_8, Static_Var_9, Static_Var_10,
            Static_Var_11, Static_Var_12;

StartMoving()
{
	bMoving = TRUE;
	Static_Var_1 = 1;
	signal SIG_AIM1;
	sleep 200;
	if( TRUE )
	{
		turn back1 to y-axis <0> speed <200>;
		turn gun1 to x-axis <-20> speed <200>;
		turn gun2 to x-axis <-20> speed <200>;
		sleep 180;
	}
	if( TRUE )
	{
		turn gun1 to x-axis <-40> now;
		turn gun2 to x-axis <-40> now;
		sleep 180;
	}
	if( TRUE )
	{
		turn gun1 to x-axis <-60> now;
		turn gun2 to x-axis <-60> now;
		move arm1 to x-axis [1.25] now;
		move arm2 to x-axis [-1.25] now;
		turn flap1 to y-axis <-15> now;
		turn flap2 to y-axis <15> now;
		turn torso to x-axis <-20> now;
		turn leg1 to x-axis <20> now;
		turn leg2 to x-axis <10> now;
		turn leg3 to x-axis <10> now;
		turn foot3 to x-axis <5> now;
		turn back1 to x-axis <15> now;
		sleep 180;
	}
	if( TRUE )
	{
		move arm1 to x-axis [3.75] now;
		move arm2 to x-axis [-3.75] now;
		turn gun1 to x-axis <-70> now;
		turn gun2 to x-axis <-70> now;
		turn flap1 to y-axis <-40> now;
		turn flap2 to y-axis <40> now;
		turn torso to x-axis <-20> now;
		turn leg1 to x-axis <15> now;
		turn leg2 to x-axis <15> now;
		turn foot1 to x-axis <-5> now;
		turn foot2 to x-axis <-5> now;
		turn leg3 to x-axis <25> now;
		turn foot3 to x-axis <5> now;
		turn back1 to x-axis <30> now;
		sleep 180;
	}
	if( TRUE )
	{
		turn flap1 to y-axis <-60> now;
		turn flap2 to y-axis <60> now;
		turn torso to x-axis <-15> now;
		turn leg2 to x-axis <45> now;
		turn foot2 to x-axis <0> now;
		turn back1 to x-axis <45> now;
		turn mid to x-axis <15> now;
		sleep 90;
	}
	if( TRUE )
	{
		turn back1 to x-axis <60> now;
		turn flap1 to y-axis <-80> now;
		turn flap2 to y-axis <80> now;
		turn torso to x-axis <-5> now;
		turn leg3 to x-axis <10> now;
		turn leg2 to x-axis <30> now;
		turn foot2 to x-axis <0> now;
		sleep 90;
	}
	if( TRUE )
	{
		turn torso to x-axis <0> now;
		move back1 to y-axis [-3.75] now;
		turn leg3 to x-axis <15> now;
		turn leg2 to x-axis <15> now;
		turn foot2 to x-axis <0> now;
	}
	if( TRUE )
	{
		turn back2 to x-axis <-10> now;
		turn back1 to x-axis <75> now;
		turn leg1 to x-axis <10> now;
		turn foot1 to x-axis <0> now;
	}
	if( TRUE )
	{
		turn leg1 to x-axis <-5> now;
		turn torso to x-axis <15> now;
		turn leg3 to x-axis <5> now;
		turn foot3 to x-axis <-15> now;
	}
	if( TRUE )
	{
		turn leg3 to x-axis <-15> now;
		turn foot3 to x-axis <-30> now;
	}
	if( TRUE )
	{
		move leg1 to x-axis [-1.25] now;
		move leg2 to x-axis [1.25] now;
		turn leg3 to x-axis <-25> now;
		turn foot1 to x-axis <15> now;
		turn foot2 to x-axis <15> now;
	}
	if( TRUE )
	{
		move leg1 to x-axis [-2.5] now;
		move leg2 to x-axis [2.5] now;
		turn leg1 to x-axis <-5> now;
		turn leg2 to x-axis <-5> now;
		turn foot1 to z-axis <-15> now;
		turn foot2 to z-axis <15> now;
	}
	if( TRUE ) {
		spin torso around x-axis speed 50000 accelerate 5000;
	}
	if( TRUE )
	{
		if( Static_Var_1 == 0 )
		{
			bMoving = FALSE;
		}
		if( Static_Var_1 == 1 )
		{
			bMoving = TRUE;
			Static_Var_4 = 1;
		}
	}
	Static_Var_12 = 0;
}

StopMoving()
{
	Static_Var_1 = 0;
	Static_Var_9 = 1;
	if( !Static_Var_8 )
	{
		if( TRUE )
		{
			Static_Var_8 = 1;
			turn torso to x-axis <0> speed <500>;
			wait-for-turn torso around x-axis;
			move leg1 to x-axis [0] speed [250];
			move leg2 to x-axis [0] speed [250];
			turn leg2 to x-axis <0> speed <200>;
			turn leg2 to z-axis <0> speed <200>;
			turn leg1 to x-axis <0> speed <150>;
			turn leg1 to z-axis <0> speed <150>;
			turn leg2 to y-axis <0> speed <200>;
			turn leg1 to y-axis <0> speed <150>;
			turn torso to x-axis <0> speed <350>;
			turn leg3 to x-axis <0> speed <150>;
			turn foot1 to x-axis <0> speed <100>;
			turn foot2 to x-axis <0> speed <100>;
			turn foot3 to x-axis <0> speed <100>;
			turn back1 to x-axis <0> speed <350>;
			turn back2 to x-axis <0> speed <350>;
			turn mid to x-axis <0> speed <150>;
			turn flap1 to y-axis <0> speed <150>;
			turn flap2 to y-axis <0> speed <150>;
			turn gun1 to x-axis <0> speed <150>;
			turn gun2 to x-axis <0> speed <150>;
			move arm1 to x-axis [0] speed [250];
			move arm2 to x-axis [0] speed [250];
			wait-for-move leg1 along x-axis;
			wait-for-move leg2 along x-axis;
			wait-for-turn leg2 around x-axis;
			wait-for-turn leg2 around z-axis;
			wait-for-turn leg1 around x-axis;
			wait-for-turn leg1 around z-axis;
			wait-for-turn leg2 around y-axis;
			wait-for-turn leg1 around y-axis;
			wait-for-turn torso around x-axis;
			wait-for-turn leg3 around x-axis;
			wait-for-turn foot1 around x-axis;
			wait-for-turn foot2 around x-axis;
			wait-for-turn foot3 around x-axis;
			wait-for-turn back1 around x-axis;
			wait-for-turn back2 around x-axis;
			wait-for-turn mid around x-axis;
			wait-for-turn flap1 around y-axis;
			wait-for-turn flap2 around y-axis;
			wait-for-turn gun1 around x-axis;
			wait-for-turn gun2 around x-axis;
			wait-for-move arm1 along x-axis;
			wait-for-move arm2 along x-axis;
			Static_Var_8 = 0;
		}
	}
	bMoving = FALSE;
	Static_Var_4 = 0;
	Static_Var_12 = 0;
}

MotionControl(moving, aiming, justmoved)
{
	var Func_Var_4, Func_Var_5, Func_Var_6;
	justmoved = TRUE;
	Func_Var_5 = 1;
	Func_Var_6 = 2;
	while( TRUE )
	{
		moving = Static_Var_1;
		aiming = Static_Var_2;
		Func_Var_4 = Static_Var_9;
		if( Func_Var_4 == 1 )
		{
			++Func_Var_6;
			if( aiming OR Func_Var_6 > 2 )
			{
				if( Func_Var_5 != Func_Var_4 )
				{
					turn torso to x-axis <0> speed <350>;
					wait-for-turn torso around x-axis;
				}
				if( moving )
				{
					justmoved = TRUE;
				}
				if( !moving )
				{
					if( aiming )
					{
						move leg1 to x-axis [0] speed [250];
						move leg2 to x-axis [0] speed [250];
						turn leg2 to x-axis <0> speed <200>;
						turn leg2 to z-axis <0> speed <200>;
						turn leg1 to x-axis <0> speed <150>;
						turn leg1 to z-axis <0> speed <150>;
						turn leg2 to y-axis <0> speed <200>;
						turn leg1 to y-axis <0> speed <150>;
						turn foot1 to x-axis <0> speed <100>;
						turn foot2 to x-axis <0> speed <100>;
						turn foot3 to x-axis <0> speed <100>;
					}
					if( !aiming )
					{
						sleep 200;
						move leg1 to x-axis [0] speed [250];
						move leg2 to x-axis [0] speed [250];
						turn leg2 to x-axis <0> speed <200>;
						turn leg2 to z-axis <0> speed <200>;
						turn leg1 to x-axis <0> speed <150>;
						turn leg1 to z-axis <0> speed <150>;
						turn leg2 to y-axis <0> speed <200>;
						turn leg1 to y-axis <0> speed <150>;
						turn torso to x-axis <0> speed <350>;
						turn leg3 to x-axis <0> speed <150>;
						turn foot1 to x-axis <0> speed <100>;
						turn foot2 to x-axis <0> speed <100>;
						turn foot3 to x-axis <0> speed <100>;
						turn back1 to x-axis <0> speed <350>;
						turn back2 to x-axis <0> speed <350>;
						turn mid to x-axis <0> speed <150>;
						turn flap1 to y-axis <0> speed <150>;
						turn flap2 to y-axis <0> speed <150>;
						turn gun1 to x-axis <0> speed <150>;
						turn gun2 to x-axis <0> speed <150>;
						move arm1 to x-axis [0] speed [250];
						move arm2 to x-axis [0] speed [250];
						Static_Var_4 = 0;
						Static_Var_12 = 0;
					}
					justmoved = FALSE;
				}
			}
		}
		if( Func_Var_4 == 2 )
		{
			Func_Var_6 = 0;
			call-script StartMoving();
		}
		Func_Var_5 = Func_Var_4;
		sleep 100;
	}
}

Create()
{
	hide shield;
	dont-cache shield;
	hide flare1;
	hide flare2;
	Static_Var_1 = 0;
	Static_Var_2 = 0;
	Static_Var_11 = 0;
	Static_Var_3 = 1;
	restore_delay = 3000;
	bMoving = FALSE;
	gun_1 = ground;
	Static_Var_8 = 0;
	Static_Var_4 = 0;
	Static_Var_12 = 0;
	start-script MotionControl();
	start-script SmokeUnit_SWS();
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 2;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	turn back1 to y-axis <0> speed <180>;
	turn arm1 to x-axis <0> speed <150>;
	turn arm2 to x-axis <0> speed <150>;
	Static_Var_2 = 0;
}

AimWeapon1(heading, pitch)
{
	while( bMoving )
	{
		sleep 100;
	}
	signal SIG_AIM1;
	set-signal-mask SIG_AIM1;
	turn back1 to y-axis heading speed <180>;
	turn arm1 to x-axis <0> - pitch speed <150>;
	turn arm2 to x-axis <0> - pitch speed <150>;
	wait-for-turn back1 around y-axis;
	wait-for-turn arm1 around x-axis;
	wait-for-turn arm2 around x-axis;
	start-script RestoreAfterDelay();
	return 1;
}

AimFromWeapon1(piecenum)
{
	if( gun_1 == 0 )
	{
		piecenum = gun1;
	}
	if( gun_1 == 1 )
	{
		piecenum = gun2;
	}
}

QueryWeapon1(piecenum)
{
	if( gun_1 == 0 )
	{
		piecenum = lfirept;
	}
	if( gun_1 == 1 )
	{
		piecenum = rfirept;
	}
}

FireWeapon1()
{
	if( gun_1 == 0 )
	{
		move gun1 to z-axis [-2.5] speed [500];
		move barrel1 to z-axis [-1.25] speed [500];
		show flare1;
		sleep 150;
		hide flare1;
		move gun1 to z-axis [0] speed [250];
		move barrel1 to z-axis [0] speed [250];
	}
	if( gun_1 == 1 )
	{
		move gun2 to z-axis [-1] speed [500];
		move barrel2 to z-axis [-1.25] speed [500];
		show flare2;
		sleep 150;
		hide flare2;
		move gun2 to z-axis [0] speed [500];
		move barrel2 to z-axis [0] speed [500];
	}
	gun_1 = !gun_1;
}

QueryWeapon2(piecenum)
{
	piecenum=back1;
}

FireWeapon2()
{
}

AimWeapon2()
{
//	if(bMoving) {
//		return 0;
//	}
//	if(!bMoving) {
		return 1;
//	}
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

Killed(severity, corpsetype)
{
	if(severity <= 25)
	{
		corpsetype = 1;
		return 0;
	}
	if(severity <= 50)
	{
		corpsetype = 2;
		return 0;
	}
	if(severity <= 99)
	{
		corpsetype = 3;
		return 0;
	}
	corpsetype = 3;
}
*/