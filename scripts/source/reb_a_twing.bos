#define TAK

#include "general/standard_commands.h"

piece  base, lwing, rwing, mwing, firept1, firept2, e1, e2, e3;

static-var  gun_1, bMoving;

#define SMOKEPIECE1 base
#define SMOKEPIECE2 base
#define SMOKEPIECE3 base
#define SMOKEPIECE4 base
#include "general/smokeunit_sws.h"

#define exhaustfx 1024+1

#define UNIT_ROOT base
#define UNIT_BELOW_GROUND_DIST [-20]
#define UNIT_RISE_SPEED [4]
#define DUSTFX 1024+2
#define DUSTFXPT1 base
#include "general/rebel_unit_build.h"

Exhaust() {
	while(1) {
		if(bMoving) {
			emit-sfx exhaustfx from e1;
			emit-sfx exhaustfx from e2;
			emit-sfx exhaustfx from e3;
		}		
		sleep 20;
	}
}

StartMoving() {
	bMoving=1;
}
	
StopMoving() {
	bMoving=0;
}

Create() {
	gun_1 = 0;
	bMoving = 0;
	set ARMORED to 1;
	start-script Exhaust();
	start-script SmokeUnit_SWS();
	call-script ConstructionAnim();
	move base to y-axis 0 now;
}

QueryWeapon1(piecenum) {
	if(!gun_1) {
		piecenum = firept1;
	}
	if(gun_1) {
		piecenum = firept2;
	}
}

AimWeapon1(heading, pitch) {
	signal SIG_AIM1;
	set-signal-mask SIG_AIM1;
	turn firept1 to y-axis heading speed <1000>;
	turn firept2 to y-axis heading speed <1000>;
	turn firept1 to x-axis pitch speed <1000>;
	turn firept2 to x-axis pitch speed <1000>;
	return 1;
}

FireWeapon1() {
	if(!gun_1) {
		sleep 150;
	}
	if(gun_1) {
		sleep 150;
	}
	gun_1 = !gun_1;
}

Killed(severity, corpsetype) {
	if(severity <= 25) {
		corpsetype = 1;
		explode base type BITMAP;
		explode lwing type FALL | BITMAP;
		explode rwing type FALL | BITMAP;
		explode mwing type FALL | BITMAP;
		return 0;
	}
	if(severity <= 50) {
		corpsetype = 2;
		explode base type BITMAP;
		explode lwing type FALL | SMOKE | BITMAP;
		explode rwing type FALL | SMOKE | BITMAP;
		explode mwing type FALL | SMOKE | BITMAP;
		return 0;
	}
	if(severity <= 99) {
		corpsetype = 3;
		explode base type BITMAP;
		explode lwing type BITMAP;
		explode rwing type FALL | FIRE | SMOKE | BITMAP;
		explode mwing type FALL | FIRE | SMOKE | BITMAP;
		return 0;
	}
	corpsetype = 3;
	explode base type BITMAP;
	explode lwing type BITMAP;
	explode rwing type FALL | FIRE | SMOKE | BITMAP;
	explode mwing type FALL | FIRE | SMOKE | BITMAP;
}
