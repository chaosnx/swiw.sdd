#define TAK

#include "general/standard_commands.h"

piece  base, fturret, fsleeves, fb1, fflare1, fb2, fflare2, rturret, rb, rflare,
       wake1, wake2, wake3, wake4;

static-var  gun_1, wake;

#define SMOKEPIECE1 fturret
#define SMOKEPIECE2 rturret
#define SMOKEPIECE3 fturret
#define SMOKEPIECE4 rturret
#include "general/smokeunit_sws.h"

#define SMALL_MUZZLE_FLASH_FX_RED 1024+1

#define UNIT_ROOT base
#define UNIT_BELOW_GROUND_DIST [-25]
#define UNIT_RISE_SPEED [4]
#define DUSTFX 1024+2
#define DUSTFXPT1 base
#include "general/rebel_unit_build.h"

StartMoving() {
	while(1) {
		if(wake <= 3) {
			emit-sfx 3 from wake1;
			emit-sfx 3 from wake2;
			emit-sfx 3 from wake3;
			emit-sfx 3 from wake4;
		}
		sleep rand(150,400);
	}
}

StopMoving() {
	sleep 100;
}

setSFXoccupy(crap) {
	wake = crap;
	if(wake > 2) {
		set UPRIGHT to 0;
	}
	if(wake < 3) {
		set UPRIGHT to 1;
	}
}

Create() {
	hide fflare1;
	hide fflare2;
	hide rflare;
	gun_1 = 0;
	turn rturret to y-axis <-180> now;
	start-script SmokeUnit_SWS();
	call-script ConstructionAnim();
	move base to y-axis 0 now;
}

RestoreAfterDelay() {
	sleep 3000;
	turn fturret to y-axis <0> speed <30>;
	turn fsleeves to x-axis <0> speed <30>;
	turn rturret to y-axis <-180> speed <30>;
}

QueryWeapon1(piecenum) {
	if(!gun_1) {
		piecenum=fflare1;
		}
	if(gun_1) {
		piecenum=fflare2;
		}
}

AimWeapon1(heading, pitch) {
	signal SIG_AIM1;
	set-signal-mask SIG_AIM1;
	turn fturret to y-axis heading speed <90>;
	turn fsleeves to x-axis 0 - pitch speed <90>;
	wait-for-turn fturret around y-axis;
	start-script RestoreAfterDelay();
	return 1;
}

FireWeapon1() {
	if(!gun_1) {
		move fb1 to z-axis [-5] speed [1250];
		emit-sfx SMALL_MUZZLE_FLASH_FX_RED from fflare1;
		sleep 100;
		move fb1 to z-axis [0] speed [125];
	}
	if(gun_1) {
		move fb2 to z-axis [-5] speed [1250];
		emit-sfx SMALL_MUZZLE_FLASH_FX_RED from fflare2;
		sleep 100;
		move fb2 to z-axis [0] speed [125];
	}
	gun_1 = !gun_1;
}

AimFromWeapon1(piecenum) {
	piecenum = fturret;
}

AimFromWeapon2(piecenum) {
	piecenum = rturret;
}

QueryWeapon2(piecenum) {
	piecenum = rflare;
}

AimWeapon2(heading, pitch) {
	signal SIG_AIM2;
	set-signal-mask SIG_AIM2;
	turn rturret to y-axis heading speed <60>;
	turn rturret to x-axis 0 - pitch speed <60>;
	wait-for-turn rturret around y-axis;
	start-script RestoreAfterDelay();
	return 1;
}

FireWeapon2() {
	move rb to z-axis [-5] speed [1250];
	emit-sfx SMALL_MUZZLE_FLASH_FX_RED from rflare;
	sleep 100;
	move rb to z-axis [0] speed [125];
}

Killed(severity, corpsetype) {
	if(severity <= 25) {
		corpsetype = 1;
		explode base type BITMAP;
		return 0;
	}
	if(severity <= 50) {
		corpsetype = 2;
		explode base type BITMAP;
		return 0;
	}
	if(severity <= 99) {
		corpsetype = 3;
		explode base type BITMAP;
		return 0;
	}
	corpsetype = 3;
	explode base type BITMAP;
}
