#define TAK

#include "general/standard_commands.h"

piece  base, engines, e1, e2, e3, lwing, lmag, l1, rwing, rmag, l2;

static-var  unitsLoaded, bMoving;

#define SMOKEPIECE1 base
#define SMOKEPIECE2 base
#define SMOKEPIECE3 base
#define SMOKEPIECE4 base
#include "general/smokeunit_sws.h"

#define exhaustfx 1024+1

#define UNIT_ROOT base
#define UNIT_BELOW_GROUND_DIST [-30]
#define UNIT_RISE_SPEED [4]
#define DUSTFX 1024+2
#define DUSTFXPT1 base
#define DUSTFXPT2 engines
#define DUSTFXPT3 lwing
#include "general/rebel_unit_build.h"

Exhaust() {
	while(1) {
		if(bMoving) {
			emit-sfx exhaustfx from e1;
			emit-sfx exhaustfx from e2;
			emit-sfx exhaustfx from e3;
		}		
		sleep 20;
	}
}

StartMoving() {
	bMoving=1;
}
	
StopMoving() {
	bMoving=0;
}

Create() {
	unitsLoaded=0;
	bMoving=0;
	start-script Exhaust();
	start-script SmokeUnit_SWS();
	call-script ConstructionAnim();
	move base to y-axis 0 now;
}

QueryTransport(piecenum, springisgay) {
	if(unitsLoaded == 1) {
		piecenum = l1;
	}
	if(unitsLoaded == 2) {
		piecenum = l2;
	}
}

BeginTransport(height) {
	++unitsLoaded;
	if(unitsLoaded == 1) {
		move l1 to y-axis (0 - height) now;
		move lmag to y-axis [-3] speed [50];
	}
	if(unitsLoaded == 2) {
		move l2 to y-axis (0 - height) now;
		move rmag to y-axis [-3] speed [50];
	}
}

TransportDrop(spring,sucks) {
	--unitsLoaded;
	if(unitsLoaded == 0) {
		move lmag to y-axis [0] speed [50];
	}
	if(unitsLoaded == 1) {
		move rmag to y-axis [0] speed [50];
	}
}

EndTransport() {
	return 0;
}

Killed(severity, corpsetype) {
	if(severity <= 25) {
		corpsetype = 1;
		explode base type BITMAP;
		explode engines type BITMAP;
		return 0;
	}
	if(severity <= 50) {
		corpsetype = 2;
		explode base type BITMAP;
		explode engines type BITMAP;
		return 0;
	}
	if(severity <= 99) {
		corpsetype = 3;
		explode base type BITMAP;
		explode engines type BITMAP;
		return 0;
	}
	corpsetype = 3;
	explode base type BITMAP;
	explode engines type BITMAP;
}
